---
// src/pages/index.astro

import Airtable from 'airtable';

// Configura Airtable
const base = new Airtable({
  apiKey: import.meta.env.PUBLIC_AIRTABLE_API_KEY
}).base(import.meta.env.PUBLIC_AIRTABLE_BASE_ID);

// Recupera i dati
let items = [];
try {
  const records = await base(import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME)
  .select({ maxRecords: 100 })
    .all();
 
  items = records.map(record => ({
    id: record.id,
    name: record.fields.Name,
    description: record.fields.Description,
    image: record.fields.Edited?.[0]?.url,
    category: record.fields.Category,
    region: record.fields.Region,
    seasonality: record.fields.Seasonality,
    producers: record.fields.Producers
  }));
} catch (error) {
  console.error('Errore caricamento dati:', error);
}

// --- Seleziona 10 immagini random ---
const shuffledItems = [...items].sort(() => 0.5 - Math.random());
const randomItems = shuffledItems.slice(0, 10);

// --- Logica per la data ---
const now = new Date();
const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
const day = now.getDate();
const month = months[now.getMonth()];
const year = now.getFullYear();
const dataCorrente = `${day} ${month} ${year}`;
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Archivio</title>

    <style>
      /* --- IMPOSTAZIONI GLOBALI --- */
      html {
        cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><circle cx='8' cy='8' r='2' fill='%23D2B48C'/><circle cx='8' cy='8' r='7' stroke='%23D2B48C' stroke-width='1' fill='none'/></svg>"), auto;
      }
      
      body {
        background-color: #3D2B1F;
        color: #d3a76e;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        line-height: 1.6; margin: 0; padding: 0; overflow-x: hidden;
      }

      /* --- TIPOGRAFIA --- */
      h1 {
        font-size: 70px;
        font-weight: 700;
        text-align: center;
        line-height: 1.2;
        margin: 40px 0;
        padding: 0;
        color: #D2B48C;
      }

      /* --- CONTENITORE PER LA GRIGLIA DI IMMAGINI --- */
      .image-canvas {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 20px;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
      }

      /* Stile per i link delle card */
      .card-link {
        text-decoration: none;
        display: block;
      }

      /* --- STILE DEL CONTENITORE 'card' --- */
      .card {
        position: relative;
        width: 100%;
        aspect-ratio: 1 / 1;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }
      .card img {
        width: 100%; height: 100%; object-fit: cover; display: block;
      }
      .card:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
      }
      
      /* --- FORM DI CONTRIBUTO --- */
      .contribute-section { position: fixed; bottom: 20px; right: 20px; z-index: 101; font-size: 14px; }
      .contribute-section summary {
        cursor: pointer; padding: 8px 12px; background-color: #3D2B1F;
        border: 1px solid #D2B48C; color: #D2B48C; display: inline-block;
      }
      .contribute-form {
        margin-top: 10px; padding: 20px; background-color: #3D2B1F;
        border: 1px solid #D2B48C; width: 280px; box-shadow: 0 4px 15px rgba(0,0,0,0.2);
      }
      .form-group { margin-bottom: 15px; }
      .form-group label { display: block; margin-bottom: 5px; font-weight: 600; }
      .form-group input, .form-group textarea, .form-group select {
        width: 100%; padding: 8px; border: 1px solid #D2B48C;
        background-color: #4a3a2a; color: #D2B48C; box-sizing: border-box;
      }
      .submit-btn {
        width: 100%; padding: 10px; background-color: #D2B48C;
        color: #3D2B1F; border: none; cursor: pointer; font-size: 1em; font-weight: bold;
      }
      .submit-btn:disabled { background-color: #888; }
      .form-message { margin-top: 10px; padding: 10px; }
      .form-message.success { background-color: #e0f8e0; border: 1px solid #5cb85c; color: #333; }
      .form-message.error { background-color: #f8e0e0; border: 1px solid #d9534f; color: #333; }

    </style>
</head>
<body>
    <h1>{dataCorrente}</h1>
    
    <div class="image-canvas">
      {randomItems.map(item => (
        <a href={`/items/${item.id}`} class="card-link">
          <div class="card">
            {item.image && <img src={item.image} alt={item.name} />}
          </div>
        </a>
      ))}
    </div>

    <details class="contribute-section">
      <summary>Vuoi contribuire all'archivio?</summary>
      <form id="contribute-form" class="contribute-form">
        <div class="form-group"><label for="title">Titolo *</label><input type="text" id="title" name="title" required /></div>
        <div class="form-group"><label for="description">Descrizione *</label><textarea id="description" name="description" rows="4" required></textarea></div>
        <div class="form-group"><label for="category">Categoria</label><select id="category" name="category"><option value="">Seleziona...</option><option value="Neri">Neri</option><option value="Siamesi">Siamesi</option><option value="Europei">Europei</option><option value="Altro">Altro</option></select></div>
        <div class="form-group"><label for="image-url">URL Immagine</label><input type="url" id="image-url" name="imageUrl" placeholder="https://esempio.com/immagine.jpg" /><small>Inserisci il link di un'immagine già online.</small></div>
        <button type="submit" class="submit-btn">Invia contributo</button>
        <div id="form-message" class="form-message"></div>
      </form>
    </details>

    <script is:inline>
      document.getElementById('contribute-form')?.addEventListener('submit', async (e) => {
        e.preventDefault();
        const submitBtn = e.target.querySelector('.submit-btn');
        const messageDiv = document.getElementById('form-message');
        submitBtn.disabled = true; submitBtn.textContent = 'Invio in corso...'; messageDiv.textContent = '';
        const imageUrl = document.getElementById('image-url').value.trim();
        const formData = {
          Name: document.getElementById('title').value,
          Description: document.getElementById('description').value,
          Category: document.getElementById('category').value,
        };
        if (imageUrl) { formData.Image = [{ url: imageUrl }]; }
        try {
          const response = await fetch(`https://api.airtable.com/v0/${import.meta.env.PUBLIC_AIRTABLE_BASE_ID}/${import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME}`, {
            method: 'POST',
            headers: { 'Authorization': `Bearer ${import.meta.env.PUBLIC_AIRTABLE_API_KEY}`, 'Content-Type': 'application/json' },
            body: JSON.stringify({ fields: formData })
          });
          const responseData = await response.json();
          if (response.ok) {
            messageDiv.textContent = '✅ Contributo inviato! Ricarica la pagina per vederlo.';
            messageDiv.className = 'form-message success';
            e.target.reset();
          } else {
            messageDiv.textContent = `❌ Errore: ${responseData.error?.message || 'Errore sconosciuto'}`;
            messageDiv.className = 'form-message error';
          }
        } catch (error) {
          messageDiv.textContent = '❌ Errore di rete. Riprova.';
          messageDiv.className = 'form-message error';
        } finally {
          submitBtn.disabled = false;
          submitBtn.textContent = 'Invia contributo';
        }
      });
    </script>
</body>
</html>