---
// src/pages/items/[id].astro

import Airtable from 'airtable';

export async function getStaticPaths() {
  const base = new Airtable({
    apiKey: import.meta.env.PUBLIC_AIRTABLE_API_KEY
  }).base(import.meta.env.PUBLIC_AIRTABLE_BASE_ID);

  const records = await base(import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME).select().all();

  return records.map(record => {
    return {
      params: { id: record.id },
      props: {
        item: {
          name: record.fields.Name,
          description: record.fields.Description,
          image: record.fields.Edited?.[0]?.url,
          category: record.fields.Category,
          region: record.fields.Region,
          producers: record.fields.Producers,
        }
      },
    };
  });
}

const { item } = Astro.props;

// --- Dati di esempio per le ricette ---
const mockRecipes = [
  { id: 1, title: "Insalata Fresca con Noci", instructions: "1. Lava e asciuga l'insalata.\n2. Aggiungi le noci e un filo d'olio.\n3. Condisci con sale e aceto balsamico." },
  { id: 2, title: "Pasta al Pomodoro Semplice", instructions: "1. Cuoci la pasta.\n2. Prepara un sugo con pomodori freschi, aglio e basilico.\n3. Salta la pasta nel sugo e servi con parmigiano." },
  { id: 3, title: "Zuppa Rustica", instructions: "1. Soffriggi cipolla e carote.\n2. Aggiungi legumi e brodo vegetale.\n3. Cuoci a fuoco lento per 45 minuti." },
  { id: 4, title: "Bruschetta Classica", instructions: "1. Tosta delle fette di pane.\n2. Strofina uno spicchio d'aglio sul pane caldo.\n3. Condisci con pomodorini a cubetti, basilico, olio e sale." },
  { id: 5, title: "Frullato Energizzante", instructions: "1. Metti nel frullatore la frutta scelta con yogurt o latte.\n2. Aggiungi un cucchiaio di miele.\n3. Frulla fino ad ottenere una consistenza cremosa." },
];
---

<html lang="it">
<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{item ? item.name : 'Dettaglio'}</title>

  <style>
    :root {
      --padding-vertical: 40px;
      --padding-horizontal-col-left: 20px;
      --padding-horizontal-col-right: 20px;
    }

    body {
      background-color: #D2B48C;
      color: #3D2B1F;
      font-family: system-ui, sans-serif;
      line-height: 1.6;
      margin: 0;
      overflow: hidden;
    }

    .details-layout {
      display: flex;
      height: 100vh;
    }

    .column-left {
      flex: 1;
      padding: var(--padding-vertical) var(--padding-horizontal-col-left);
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
    }
    .column-left img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    .back-link {
      position: absolute;
      top: var(--padding-vertical);
      left: var(--padding-horizontal-col-left);
      font-size: 2.5em;
      line-height: 1;
      color: #3D2B1F;
      text-decoration: none;
      transition: transform 0.2s ease;
    }
    .back-link:hover {
      transform: scale(1.15);
    }

    .column-right {
      flex: 1;
      border-left: 1px solid #3D2B1F;
      overflow-y: hidden; /* Nasconde lo scroll principale della colonna */
      display: flex;
      flex-direction: column;
    }

    .column-right-content {
        padding: var(--padding-vertical) var(--padding-horizontal-col-right);
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    h1 {
      font-size: 3.5em;
      margin: 0;
      line-height: 1.1;
    }

    .separator {
      border: none;
      height: 1px;
      background-color: #3D2B1F;
      flex-shrink: 0;
      margin: 20px calc(-1 * var(--padding-horizontal-col-right));
    }

    .tags {
      display: flex;
      align-items: center;
    }

    .tag {
      font-size: 0.8em;
      font-weight: 800;
      text-transform: uppercase;
    }
   
    .vertical-separator {
      width: 1px;
      background-color: #3D2B1F;
      height: 1.2em;
      margin: 0 1rem;
    }
    
    .content-wrapper {
        /*flex-grow: 1; /* Occupa tutto lo spazio disponibile */
        overflow-y: auto; /* Rende solo quest'area scorrevole */
        padding-right: 10px; /* Spazio per la barra di scorrimento */
        height: 150px;
    }

    p.description {
      flex-grow: 1; /* Occupa tutto lo spazio disponibile */
      font-size: 1.1em;
      white-space: pre-wrap;
      margin: 0 0 40px 0;
    }

    .recipes-section {
        margin-bottom: 40px;
    }

    .recipes-heading {
      font-size: 0.8em;
      font-weight: 800;
      text-transform: uppercase;
      margin: 0 0 10px 0;
    }
    
    .recipe-item {
        border-bottom: 1px solid #3D2B1F;
    }
    .recipe-item summary {
        cursor: pointer;
        padding: 0px 0;
        margin: 0;
        font-weight: medium;
        list-style: none; /* Rimuove il marcatore di default */
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .recipe-item summary::after {
        content: '+'; /* Simbolo quando chiuso */
        font-size: 1.5em;
        font-weight: normal;
    }
    .recipe-item[open] > summary::after {
       font-weight: bold;
       content: '−'; /* Simbolo quando aperto */
    }
    .recipe-content {
        padding: 0 10px 20px 10px;
        white-space: pre-wrap;
    }
   
    .producers-container {
      flex-shrink: 0;
    }

    .producers-info .tag {
        display: block;
    }
    @media (max-width: 900px) {
      body, .column-right, .content-wrapper {
        overflow: auto;
      }
      .details-layout {
        flex-direction: column;
        height: auto;
      }
      .column-left {
        max-height: 60vh;
        padding-top: 80px;
      }
      .column-right {
        border-left: none;
      }
      .back-link {
        top: 20px;
        left: 20px;
      }
      .separator {
        margin-left: 0;
        margin-right: 0;
      }
    }
  </style>
</head>
<body>
    {item ? (
      <main class="details-layout">

        <div class="column-left">
          <a href="/" class="back-link" title="Torna all'archivio">←</a>
          {item.image && <img src={item.image} alt={item.name} />}
        </div>

        <div class="column-right">
          <div class="column-right-content">
            
            <h1>{item.name}</h1>
            <hr class="separator" />
            
            <div class="tags">
                {item.category && <span class="tag">{item.category}</span>}
                {item.category && item.region && <div class="vertical-separator"></div>}
                {item.region && <span class="tag">{item.region}</span>}
            </div>
            
            <p class="description">{item.description}</p>
            <hr class="separator" />
           
            <h2 class="recipes-heading">RECEPIES</h2>
            <div class="content-wrapper">
                <div class="recipes-section">
                   
                    {mockRecipes.map(recipe => (
                        <details class="recipe-item">
                            <summary>{recipe.title}</summary>
                            <div class="recipe-content">{recipe.instructions}</div>
                        </details>
                    ))}
                </div>
            </div>

            {item.producers && (
              <div class="producers-container">
                <hr class="separator" />
                <div class="producers-info">
                    <span class="tag">{item.producers}</span>
                </div>
              </div>
            )}
          </div>
        </div>

      </main>
    ) : (
      <div style="padding: 40px;">
        <a href="/" class="back-link">←</a>
        <h1>Elemento non trovato</h1>
      </div>
    )}
</body>
</html>